{"version":3,"sources":["Arc.js","data.js","calculations.js","History.js","Container.js","App.js","reportWebVitals.js","index.js"],"names":["Arc","props","startAngle","endAngle","r","R","cx","cy","undefined","myArc","doubleArc","arc","x","y","start","end","dblArc","moveTo","slice","indexOf","arcPath","makeSingleArc","makeArc","stroke","strokeLinecap","strokeWidth","d","DEGREES_IN_HALF_ARC","ANGLE_START","Math","PI","convertUnitsToDegrees","units","minUnits","maxUnits","abs","History","this","data","minValue","maxValue","metadata","min","max","width","console","log","React","Component","Container","test","Fragment","style","height","viewBox","fill","fontSize","JSON","stringify","testData","App","useState","idx","setIdx","label","setLabel","demoData","setDemoData","useEffect","interval","setInterval","length","clearInterval","className","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QA8DeA,EA9CH,SAACC,GAAW,IACfC,EAAsCD,EAAtCC,WAAYC,EAA0BF,EAA1BE,SAAUC,EAAgBH,EAAhBG,EAAGC,EAAaJ,EAAbI,EAAGC,EAAUL,EAAVK,GAAIC,EAAMN,EAANM,GAEvC,QAAmBC,IAAfN,QAAyCM,IAAbL,EAC9B,OAAO,KAiCT,IAAMM,EA9BN,SAAiBP,EAAYC,EAAUC,EAAGC,EAAGC,EAAIC,GAM/C,IAAMG,EAAYC,YAAI,CACpBC,EAAGN,EACHO,EAAGN,EACHF,IACAD,IACAU,MAAOZ,EACPa,IAAKZ,IAGP,OAAIC,IAAMC,EASZ,SAAwBW,GACtB,IAAMC,EAASD,EAAOE,MAAM,EAAGF,EAAOG,QAAQ,KAAO,GAC/CC,EAAUJ,EAAOE,MAAMF,EAAOG,QAAQ,KAAMH,EAAOG,QAAQ,IAAKH,EAAOG,QAAQ,MAAQ,GAC7F,MAAM,GAAN,OAAUF,EAAV,YAAoBG,GAXVC,CAAcX,GAEfA,EAYGY,CAAQpB,EAAYC,EAAUC,EAAGC,EAAGC,EAAIC,GAEtD,OACE,mCACE,sBAAMgB,OAAO,UAAUC,cAAc,QAAQC,YAAa,IAAKC,EAAGjB,OCrD3DkB,EAAsB,IAG7BC,GAAc,IAAqBC,KAAKC,GAAG,ICOpCC,GDJ0BF,KAAKC,GCIP,SAAUE,EAAOC,EAAUC,GAI9D,OAHwBF,EAAQC,EAAYA,EAAWD,EAAQE,EAAWA,EAAWF,IAE9DL,IAA0BE,KAAKM,IAAID,EAAWD,IAC1B,IAAMN,ICuBlCS,E,4JA7Bf,WAKE,IAAKC,KAAKpC,MAAMqC,WAAqC9B,IAA7B6B,KAAKpC,MAAMqC,KAAKC,eAAwD/B,IAA9B6B,KAAKpC,MAAMqC,KAAKE,UAAwD,OAA7BH,KAAKpC,MAAMqC,KAAKC,UAAkD,OAA7BF,KAAKpC,MAAMqC,KAAKE,SAChK,OAAO,KAGT,IAAKH,KAAKpC,MAAMwC,eAAwCjC,IAA5B6B,KAAKpC,MAAMwC,SAASC,UAAiDlC,IAA5B6B,KAAKpC,MAAMwC,SAASE,KAAkD,OAA5BN,KAAKpC,MAAMwC,SAASC,KAA4C,OAA5BL,KAAKpC,MAAMwC,SAASE,IACrK,OAAO,KAGT,IAAMzC,EAAa6B,EAAsBM,KAAKpC,MAAMqC,KAAKC,SAAUF,KAAKpC,MAAMwC,SAASC,IAAKL,KAAKpC,MAAMwC,SAASE,KAC1GxC,EAAW4B,EAAsBM,KAAKpC,MAAMqC,KAAKE,SAAUH,KAAKpC,MAAMwC,SAASC,IAAKL,KAAKpC,MAAMwC,SAASE,KACxGrC,EAAK+B,KAAKpC,MAAM2C,MAAQ,EACxBrC,EAAK8B,KAAKpC,MAAMM,GAChBH,EAAIiC,KAAKpC,MAAM2C,MAAQ,EAAI,IAE3B3C,EAAQ,CAACC,aAAYC,WAAUC,IAAGE,KAAIC,MAE5C,OADJsC,QAAQC,IAAI7C,QACWO,IAAfN,QAAyCM,IAAbL,EACvB,KAGF,cAAC,EAAD,2BAASF,GAAT,IAAgBI,EAAGD,S,GA3BR2C,IAAMC,WCUbC,MAhBf,SAAmBhD,GAEjB,IAAMiD,EAAI,eAAOjD,GAEjB,OACE,cAAC,IAAMkD,SAAP,UACA,sBAAKC,MAAO,CAACC,OAAmB,EAAXpD,EAAMM,GAAS,IAAK+C,QAAO,cAASrD,EAAM2C,MAAf,YAAmC,EAAX3C,EAAMM,GAAS,IAAMgD,KAAK,SAAlG,UACA,wBAAQjD,GAAIL,EAAM2C,MAAQ,EAAGrC,GAAIN,EAAMM,GAAIH,EAAGH,EAAM2C,MAAQ,EAAGW,KAAK,UAClE,cAAE,EAAF,eAAcL,IACd,sBAAMM,SAAS,UAAU5C,EAAGX,EAAM2C,MAAQ,EAAI,GAAI/B,EAAc,EAAXZ,EAAMM,GAAS,GAAIgD,KAAK,UAA7E,wBAAgGtD,EAAMqC,KAAKC,SAA3G,kBAA6HtC,EAAMqC,KAAKE,gBAJrHiB,KAAKC,UAAUR,KCLpCS,EAAW,CACb,CACEpD,GAAI,IACJqC,MAAO,IACPN,KAAM,CACJC,SAAU,EACVC,SAAU,GAEZC,SAAU,CACRC,IAAK,EACLC,IAAK,KAGT,CACEpC,GAAI,IACJqC,MAAO,IACPN,KAAM,CACJC,SAAU,EACVC,SAAU,GAEZC,SAAU,CACRC,IAAK,EACLC,IAAK,KAGT,CACEpC,GAAI,IACJqC,MAAO,IACPN,KAAM,CACJC,SAAU,EACVC,SAAU,GAEZC,SAAU,CACRC,IAAK,EACLC,IAAK,KAGT,CACEpC,GAAI,IACJqC,MAAO,IACPN,KAAM,CACJC,SAAU,EACVC,SAAU,GAEZC,SAAU,CACRC,IAAK,EACLC,IAAK,KAGT,CACEpC,GAAI,IACJqC,MAAO,IACPN,KAAM,CACJC,SAAU,EACVC,SAAU,IAEZC,SAAU,CACRC,IAAK,EACLC,IAAK,MAqCIiB,MAhCf,WAAgB,IAAD,EAEOC,mBAAS,GAFhB,mBAERC,EAFQ,KAEHC,EAFG,OAGWF,mBAAS,GAHpB,mBAGRG,EAHQ,KAGDC,EAHC,OAIiBJ,mBAC5BF,EAAS,IALE,mBAIRO,EAJQ,KAIEC,EAJF,KAqBb,OAbAC,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAG3BH,EAAYR,EAASG,IACrBG,EAASH,EAAM,GACfC,GAAQD,EAAM,GAAKH,EAASY,QAC5B1B,QAAQC,IAAI,MAAOgB,EAAKH,EAASY,UAChC,KACH,OAAO,kBAAMC,cAAcH,OAK3B,sBAAKI,UAAU,MAAf,UACE,kDACA,2CAAcT,KACd,qBAAKZ,MAAO,CAACsB,QAAS,QAAtB,SACE,cAAC,EAAD,eAAeR,UCjFRS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ee10a2d0.chunk.js","sourcesContent":["import arc from 'svg-arc'\nimport React from 'react'\n\n /**\n  * This presentational component is the sort of thing that would\n  * be used over and over in a big app.  stroke details could be props. \n  * \n  * \n   * @param {*} startAngle \n   * @param {*} endAngle \n   * @param {*} r - inner radius\n   * @param {*} R - outer radius if same as inner, return single arc\n   * @param {*} viewBox \n   * @returns svg path d = \"M startX startY\" A radius radius, 0 largeArcFlag, sweepFlag, endX, endY\n   */\n\nconst Arc = (props) => {\n  const {startAngle, endAngle, r, R, cx, cy} = props\n\n  if (startAngle === undefined || endAngle === undefined) {\n    return null\n  }\n\n  function makeArc(startAngle, endAngle, r, R, cx, cy) {\n\n    /** returns a double arc svg d value\n     * sample --  \"M -82.27 47.50 L -82.27 47.50 A 95 95 0 0 1 -93.56 16.50 L -93.56 16.50 A 95 95  0 0 0 -82.27 47.50 Z\"\n     */\n\n    const doubleArc = arc({\n      x: cx, // center of view box\n      y: cy,\n      R,\n      r,\n      start: startAngle,\n      end: endAngle\n    })\n\n    if (r === R) {\n      return  makeSingleArc(doubleArc)\n    } else {\n      return doubleArc\n    }\n  }\n\n  // need single arc to see round endcap shape\n  // below should be refactored into fork of npm svg-arc TODO\n  function makeSingleArc (dblArc) {\n    const moveTo = dblArc.slice(0, dblArc.indexOf('L') - 1)\n    const arcPath = dblArc.slice(dblArc.indexOf('A'), dblArc.indexOf('L', dblArc.indexOf('A')) - 1)// 1st L after an A\n    return `${moveTo} ${arcPath}`\n  }\n\n  const myArc = makeArc(startAngle, endAngle, r, R, cx, cy)\n\n  return (\n    <>\n      <path stroke=\"#7BCFFE\" strokeLinecap=\"round\" strokeWidth={5.8} d={myArc}></path>\n    </>\n  )\n}\n\nexport default Arc\n","// CONSTANTS\n\n\n/** angle from top of gauge to min or max in degrees */\nexport const DEGREES_IN_HALF_ARC = 120;\n\n/** angle from the top clockwise to the minimum end stop in radians */\nconst ANGLE_START = -DEGREES_IN_HALF_ARC*Math.PI/180;\n\n/** angle from the top clockwise to the maximum end stop in radians */\nconst ANGLE_END  = DEGREES_IN_HALF_ARC*Math.PI/180;\n\nconst ANGLE_RANGE = ANGLE_END-ANGLE_START; // radians\n\nconst DISK_RADIUS = 332/2;\n\nconst GROOVE_RADIUS = 318/2;\n\nconst HISTORY_BAND_RADIUS      = GROOVE_RADIUS;","import { DEGREES_IN_HALF_ARC } from './data.js'\n\n/**         degrees                   amps\n *            0, 360                    5\n *              |                       |\n *              |                       |\n *             / \\                     / \\\n *            /   \\                   /   \\\n *       min 240  120 max           0       10\n * \n *  DEGREES_IN_HALF_ARC = 360 - 240 = 120\n *  degrees = amp * 24 + 240 (svg-arc takes modulo if over 360)\n */\n\nexport const convertUnitsToDegrees = function (units, minUnits, maxUnits) {\n  const displayedUnits = (units < minUnits) ? minUnits : units > maxUnits ? maxUnits : units\n  \n  const degToUnitRatio = DEGREES_IN_HALF_ARC * 2 / Math.abs(maxUnits - minUnits)\n  return (displayedUnits * degToUnitRatio) + 360 - DEGREES_IN_HALF_ARC\n}\n","import React from 'react'\nimport Arc from './Arc'\nimport { convertUnitsToDegrees } from './calculations.js'\n\n/**\n * props.data.minValue, data.maxValue, props.metadata.min, metadata.max\n * cx = this.width/2 where \"this\" is parent,  cy = this.cy\n */\n\n\nclass History extends React.Component {\n\n  render() {\n    // kludgy validation - IRL, data and metadata may be handled further up the component tree?\n    // error boundries? default component? shudder... imagines a dashboard of little error widgets :-(\n    // proptypes, typescript?\n    \n    if (!this.props.data || this.props.data.minValue === undefined || this.props.data.maxValue  === undefined || this.props.data.minValue === null || this.props.data.maxValue === null) {\n      return null\n    }\n\n    if (!this.props.metadata || this.props.metadata.min === undefined || this.props.metadata.max === undefined ||  this.props.metadata.min === null || this.props.metadata.max === null) {\n      return null\n    }\n\n    const startAngle = convertUnitsToDegrees(this.props.data.minValue, this.props.metadata.min, this.props.metadata.max)\n    const endAngle = convertUnitsToDegrees(this.props.data.maxValue, this.props.metadata.min, this.props.metadata.max)\n    const cx = this.props.width / 2\n    const cy = this.props.cy\n    const r = this.props.width / 2 * .95\n\n    const props = {startAngle, endAngle, r, cx, cy}\nconsole.log(props)\n    if (startAngle === undefined || endAngle === undefined) {\n      return null\n    }\n\n    return <Arc {...props} R={r} />\n      } // end render\n  } // end class History\n  \n  export default History\n","import React from 'react';\nimport './App.css';\nimport History from './History';\n\nfunction Container(props) {\n\n  const test = {...props}\n\n  return (\n    <React.Fragment key={JSON.stringify(test)}>\n    <svg style={{height: props.cy * 2 + 30}} viewBox={`0 0 ${props.width} ${props.cy * 2 + 30}`} fill=\"#22222\">\n    <circle cx={props.width / 2} cy={props.cy} r={props.width / 2} fill=\"black\"/>\n      < History {...test} />\n      <text fontSize=\"smaller\" x={props.width / 2 - 40} y={props.cy * 2 - 20} fill=\"#7BCFFE\">{`Low: ${props.data.minValue} High: ${props.data.maxValue}`}</text>\n    </svg>\n  </React.Fragment>\n  );\n}\n\n\nexport default Container;\n","import React, { useEffect, useState} from 'react';\nimport './App.css';\nimport Container from './Container';\n\nlet testData = [\n  {\n    cy: 200,\n    width: 400,\n    data: {\n      minValue: 4,\n      maxValue: 5,\n    },\n    metadata: {\n      min: 0,\n      max: 10\n    }\n  },\n  {\n    cy: 200,\n    width: 400,\n    data: {\n      minValue: 3,\n      maxValue: 5,\n    },\n    metadata: {\n      min: 0,\n      max: 10\n    }\n  },\n  {\n    cy: 200,\n    width: 400,\n    data: {\n      minValue: 3,\n      maxValue: 7,\n    },\n    metadata: {\n      min: 0,\n      max: 10\n    }\n  },\n  {\n    cy: 200,\n    width: 400,\n    data: {\n      minValue: 0,\n      maxValue: 7,\n    },\n    metadata: {\n      min: 0,\n      max: 10\n    }\n  },\n  {\n    cy: 200,\n    width: 400,\n    data: {\n      minValue: 0,\n      maxValue: 10,\n    },\n    metadata: {\n      min: 0,\n      max: 10\n    }\n  }\n]\n\nfunction App() {\n\n  let [idx, setIdx] = useState(0)\n  let [label, setLabel] = useState(0)\n  let [demoData, setDemoData] = useState(\n    testData[0]\n  )\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      \n      // loop through demo data forever\n      setDemoData(testData[idx])\n      setLabel(idx + 1)\n      setIdx((idx + 1) % testData.length)\n      console.log('idx', idx, testData.length)\n    }, 2000)\n    return () => clearInterval(interval)\n  })\n\n   \n  return (\n    <div className=\"App\">\n      <h1>History Arc Demo</h1>\n      <h4>DataSet: {label}</h4>\n      <div style={{padding: \"1rem\"}}>\n        <Container {...demoData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}